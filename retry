#!/bin/sh

# Copyright (c) 2020 Abel Abraham Camarillo Ojeda <acamari@verlet.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# executes program arguments up to a $max times until a execution suceeds
# - returns 0 status; it sleeps before all but the first execution a
# for a number of seconds obtained using an exponentially growing algorithm.
#
# example: $ retry sh -c 'echo `date`; false'; echo $?
#	Sun Feb 21 01:45:50 CST 2016
#	Sun Feb 21 01:45:55 CST 2016
#	Sun Feb 21 01:46:07 CST 2016
# 	1
#	    0m16.08s real     0m00.01s user     0m00.06s system

err()
{
	echo "$0: " "$@" 2>&1
	exit 1
}

# easier to copy-paste into scripts
retry()
{
	while getopts 'c:v' _opt; do
		case $_opt in
			# count, max number of executions
			c*) cflag="$OPTARG";;
			# was verbose: show errors on all executions, deprecated
			# flag, supported as arg but does nothing
			v*) :;;
			*) err error in arguments;;
		esac
	done
	shift $((OPTIND - 1))

	i=0
	status=1
	max=${cflag:-3}
	while [ "$i" -lt "$max" ]; do
		sleep=$((i ? (1 << i) + (RANDOM % (1 << i + 1)) : 0))
		sleep $sleep
		"$@" && return 0
		status=$?
		i=$((i+1))
	done
	return $status
}

retry "$@"
